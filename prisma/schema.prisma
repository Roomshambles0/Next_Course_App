// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id                  Int     @id @default(autoincrement())
  email               String  @unique
  name                String?
  hashedpassword      String
  role                Role @default(USER)
  purchasedcourses    Course[]
}

model Admin {
  id               Int     @id @default(autoincrement())
  email            String  @unique
  name             String?
  hashedpassword   String
  role             Role @default(ADMIN)
  courses          Course[]
}

model Course {
  id           Int @id @default(autoincrement())
  title        String 
  description  String 
  imageLink    String
  Price        Int
  published    Boolean
  teacher      Admin  @relation(fields: [teacherId], references:[id])
  teacherId    Int
  students     Student[]   
}


model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}
enum Role {
  USER
  ADMIN
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String   @unique
  emailVerified    DateTime?
  image            String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  role             Role  @default(USER)
  accounts         Account[]
  sessions         Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}